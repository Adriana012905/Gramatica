/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.example.normalizacion.vista;

import com.example.normalizacion.control.Normalizacion;
import com.example.normalizacion.modelo.Gramatica;
import javax.swing.JOptionPane;


public class Interfaz extends javax.swing.JFrame {

    Normalizacion n;
    Gramatica chomsky;
    Gramatica greybatch;
    boolean enGreybatch;
    boolean recIzqEliminada;
     boolean recInmIzqEliminada;
    
    
    public Interfaz() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("NORMALIZACION");
        n = new Normalizacion();
        chomsky = null;
        greybatch = null;
        btnCargarGreybatch.setEnabled(false);
        enGreybatch = false;
        recInmIzqEliminada = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPane = new javax.swing.JTabbedPane();
        tabComsky = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTerminalesChomsky = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSigmaChomsky = new javax.swing.JTextArea();
        btnEliminarInutiles = new javax.swing.JButton();
        btnEliminarInalcanzables = new javax.swing.JButton();
        btnEliminarNulas = new javax.swing.JButton();
        btnEliminarUnitarias = new javax.swing.JButton();
        txtInicialChomsky = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnAplicarChomsky = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnTestChomsky = new javax.swing.JButton();
        btnCargarGreybatch = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNoTerminalesChomsky = new javax.swing.JTextArea();
        tabGreybatch = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtTerminalesGreybatch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSigmaGreybatch = new javax.swing.JTextArea();
        btnElimnarRI = new javax.swing.JButton();
        btnElimnarRII = new javax.swing.JButton();
        txtInicialGreybatch = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnLimpiar2 = new javax.swing.JButton();
        btnTestGreybatch = new javax.swing.JButton();
        btnCrearVariablesGraybatch = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtNoTerminalesGreybatch = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("VARIABLE INICIAL");

        jLabel3.setText("VARIABLES TERMINALES");

        jLabel2.setText("VARIABLES NO TERMINALES");

        txtSigmaChomsky.setColumns(20);
        txtSigmaChomsky.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        txtSigmaChomsky.setRows(5);
        jScrollPane1.setViewportView(txtSigmaChomsky);

        btnEliminarInutiles.setText("ELIMINAR VARIABLES INUTILES");
        btnEliminarInutiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInutilesActionPerformed(evt);
            }
        });

        btnEliminarInalcanzables.setText("ELIMINAR VARIABLES INALCANZABLES");
        btnEliminarInalcanzables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInalcanzablesActionPerformed(evt);
            }
        });

        btnEliminarNulas.setText("ELIMINAR VARIABLES NULAS");
        btnEliminarNulas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarNulasActionPerformed(evt);
            }
        });

        btnEliminarUnitarias.setText("ELIMINAR VARIABLES UNITARIAS");
        btnEliminarUnitarias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUnitariasActionPerformed(evt);
            }
        });

        txtInicialChomsky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInicialChomskyActionPerformed(evt);
            }
        });

        jLabel4.setText("SIGMA");

        btnAplicarChomsky.setText("APLICAR CHOMSKY");
        btnAplicarChomsky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAplicarChomskyActionPerformed(evt);
            }
        });

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnTestChomsky.setText("CARGAR PRUEBA");
        btnTestChomsky.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestChomskyActionPerformed(evt);
            }
        });

        btnCargarGreybatch.setText("CARGAR ESTA GRAMARICA EN GREYBATCH");
        btnCargarGreybatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarGreybatchActionPerformed(evt);
            }
        });

        txtNoTerminalesChomsky.setColumns(20);
        txtNoTerminalesChomsky.setRows(5);
        jScrollPane3.setViewportView(txtNoTerminalesChomsky);

        javax.swing.GroupLayout tabComskyLayout = new javax.swing.GroupLayout(tabComsky);
        tabComsky.setLayout(tabComskyLayout);
        tabComskyLayout.setHorizontalGroup(
            tabComskyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabComskyLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(tabComskyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabComskyLayout.createSequentialGroup()
                        .addGroup(tabComskyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(btnCargarGreybatch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(tabComskyLayout.createSequentialGroup()
                        .addGroup(tabComskyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabComskyLayout.createSequentialGroup()
                                .addComponent(btnTestChomsky, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabComskyLayout.createSequentialGroup()
                                .addGroup(tabComskyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabComskyLayout.createSequentialGroup()
                                        .addGroup(tabComskyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(tabComskyLayout.createSequentialGroup()
                                                .addComponent(txtTerminalesChomsky, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE))
                                            .addGroup(tabComskyLayout.createSequentialGroup()
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE))
                                    .addGroup(tabComskyLayout.createSequentialGroup()
                                        .addComponent(txtInicialChomsky, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(tabComskyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAplicarChomsky, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnEliminarInutiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnEliminarUnitarias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnEliminarInalcanzables, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnEliminarNulas, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(34, 34, 34))))
        );
        tabComskyLayout.setVerticalGroup(
            tabComskyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabComskyLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btnTestChomsky)
                .addGap(18, 18, 18)
                .addGroup(tabComskyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabComskyLayout.createSequentialGroup()
                        .addComponent(btnEliminarInutiles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarInalcanzables)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarNulas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarUnitarias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAplicarChomsky)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tabComskyLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(txtInicialChomsky, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTerminalesChomsky, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCargarGreybatch)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addGap(18, 18, 18))
        );

        tabPane.addTab("CHOMSKY", tabComsky);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("VARIABLE INICIAL");

        jLabel6.setText("VARIABLES TERMINALES");

        jLabel7.setText("VARIABLES NO TERMINALES");

        txtSigmaGreybatch.setColumns(20);
        txtSigmaGreybatch.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        txtSigmaGreybatch.setRows(5);
        jScrollPane2.setViewportView(txtSigmaGreybatch);

        btnElimnarRI.setText("ELIMINAR RECURSIVIDA IZQUIERDA");
        btnElimnarRI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimnarRIActionPerformed(evt);
            }
        });

        btnElimnarRII.setText("ELIMINAR RECURSIVIDA INMEDIATA IZQUIERDA");
        btnElimnarRII.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimnarRIIActionPerformed(evt);
            }
        });

        txtInicialGreybatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInicialGreybatchActionPerformed(evt);
            }
        });

        jLabel8.setText("SIGMA");

        btnLimpiar2.setText("LIMPIAR");
        btnLimpiar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiar2ActionPerformed(evt);
            }
        });

        btnTestGreybatch.setText("CARGAR PRUEBA");
        btnTestGreybatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestGreybatchActionPerformed(evt);
            }
        });

        btnCrearVariablesGraybatch.setText("CREAR VARIABLES DE GREYBATCH");
        btnCrearVariablesGraybatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearVariablesGraybatchActionPerformed(evt);
            }
        });

        txtNoTerminalesGreybatch.setColumns(20);
        txtNoTerminalesGreybatch.setRows(5);
        jScrollPane4.setViewportView(txtNoTerminalesGreybatch);

        javax.swing.GroupLayout tabGreybatchLayout = new javax.swing.GroupLayout(tabGreybatch);
        tabGreybatch.setLayout(tabGreybatchLayout);
        tabGreybatchLayout.setHorizontalGroup(
            tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabGreybatchLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabGreybatchLayout.createSequentialGroup()
                        .addComponent(btnTestGreybatch, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(tabGreybatchLayout.createSequentialGroup()
                        .addGroup(tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabGreybatchLayout.createSequentialGroup()
                                .addGroup(tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabGreybatchLayout.createSequentialGroup()
                                        .addGroup(tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE))
                                        .addGap(44, 44, 44))
                                    .addGroup(tabGreybatchLayout.createSequentialGroup()
                                        .addGroup(tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtInicialGreybatch, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTerminalesGreybatch, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, 0)))
                                .addGap(0, 0, 0)
                                .addGroup(tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnElimnarRII, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnElimnarRI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCrearVariablesGraybatch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2)
                            .addComponent(btnLimpiar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(tabGreybatchLayout.createSequentialGroup()
                                .addGroup(tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(27, 27, 27))))
        );
        tabGreybatchLayout.setVerticalGroup(
            tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabGreybatchLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btnTestGreybatch)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addGroup(tabGreybatchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabGreybatchLayout.createSequentialGroup()
                        .addComponent(txtInicialGreybatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTerminalesGreybatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7))
                    .addGroup(tabGreybatchLayout.createSequentialGroup()
                        .addComponent(btnCrearVariablesGraybatch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnElimnarRI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnElimnarRII)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar2)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        tabPane.addTab("GREYBATCH", tabGreybatch);

        getContentPane().add(tabPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarGramaticaC(){
        
        String inicial = "";
        String noTerminales = "";
        String terminales = "";
        String sigma = "";
        
        if(!txtInicialChomsky.getText().isEmpty()){
            inicial = txtInicialChomsky.getText();
        }else{
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR LA VARIABLE INICIAL");
        }
        
        if(!txtNoTerminalesChomsky.getText().isEmpty()){
            noTerminales = txtNoTerminalesChomsky.getText();
        }else{
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR LAS VARIABLES NO TERMINALES");
        }
        
        if(!txtTerminalesChomsky.getText().isEmpty()){
            terminales = txtTerminalesChomsky.getText();
        }else{
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR LAS VARIABLES TERMINALES");
        }
        
        if(!txtSigmaChomsky.getText().isEmpty()){
            sigma = txtSigmaChomsky.getText();
        }else{
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR EL SIGMA");
        }
        
        if(!inicial.isEmpty() && !noTerminales.isEmpty() && !terminales.isEmpty() && !sigma.isEmpty()){
            this.chomsky = n.crearGramatica(noTerminales, terminales, inicial, sigma);
        }
        
    }
    
    private void guardarGramaticaG(){
        
        String inicial = "";
        String noTerminales = "";
        String terminales = "";
        String sigma = "";
        
        if(!txtInicialGreybatch.getText().isEmpty()){
            inicial = txtInicialGreybatch.getText();
        }else{
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR LA VARIABLE INICIAL");
        }
        
        if(!txtNoTerminalesGreybatch.getText().isEmpty()){
            noTerminales = txtNoTerminalesGreybatch.getText();
        }else{
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR LAS VARIABLES NO TERMINALES");
        }
        
        if(!txtTerminalesGreybatch.getText().isEmpty()){
            terminales = txtTerminalesGreybatch.getText();
        }else{
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR LAS VARIABLES TERMINALES");
        }
        
        if(!txtSigmaGreybatch.getText().isEmpty()){
            sigma = txtSigmaGreybatch.getText();
        }else{
            JOptionPane.showMessageDialog(this, "DEBE INGRESAR EL SIGMA");
        }
        
        if(!inicial.isEmpty() && !noTerminales.isEmpty() && !terminales.isEmpty() && !sigma.isEmpty()){
            this.greybatch = n.crearGramatica(noTerminales, terminales, inicial, sigma);
        }
        
    }
    
    public void actualizarCamposChomsky(){
        this.txtInicialChomsky.setText(chomsky.getInicial());
        this.txtNoTerminalesChomsky.setText(chomsky.getNoTerminales().toString());
        this.txtTerminalesChomsky.setText(chomsky.getTerminales().toString());
        this.txtSigmaChomsky.setText(chomsky.sigmaToString());
        this.btnTestChomsky.setEnabled(false);
        this.txtInicialChomsky.setEditable(false);
        this.txtNoTerminalesChomsky.setEditable(false);
        this.txtTerminalesChomsky.setEditable(false);
        this.txtSigmaChomsky.setEditable(false);
    }
    
    public void actualizarCamposGreybatch(){
        this.txtInicialGreybatch.setText(greybatch.getInicial());
        this.txtNoTerminalesGreybatch.setText(greybatch.getNoTerminales().toString());
        this.txtTerminalesGreybatch.setText(greybatch.getTerminales().toString());
        this.txtSigmaGreybatch.setText(greybatch.sigmaToString());
        this.btnTestGreybatch.setEnabled(false);
        this.txtInicialGreybatch.setEditable(false);
        this.txtNoTerminalesGreybatch.setEditable(false);
        this.txtTerminalesGreybatch.setEditable(false);
        this.txtSigmaGreybatch.setEditable(false);
    }
    
    private void txtInicialChomskyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInicialChomskyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInicialChomskyActionPerformed

    private void btnEliminarUnitariasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUnitariasActionPerformed
        if(chomsky==null){
            guardarGramaticaC();
        }
        while(n.existenUnitarias(chomsky)){
            n.eliminarUnitarias(chomsky);
        }
        actualizarCamposChomsky();
    }//GEN-LAST:event_btnEliminarUnitariasActionPerformed

    private void btnEliminarInutilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInutilesActionPerformed
        if(chomsky==null){
            guardarGramaticaC();
        }
        while(n.existenInutiles(chomsky)){
            n.eliminarInutiles(chomsky);
        }
        actualizarCamposChomsky();
        
    }//GEN-LAST:event_btnEliminarInutilesActionPerformed

    private void btnEliminarInalcanzablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInalcanzablesActionPerformed
        if(chomsky==null){
            guardarGramaticaC();
        }
        while(n.existenInalacanzables(chomsky, chomsky.getInicial())){
            n.eliminarInalacanzables(chomsky, chomsky.getInicial());
        }
        actualizarCamposChomsky();
    }//GEN-LAST:event_btnEliminarInalcanzablesActionPerformed

    private void btnElimnarRIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimnarRIActionPerformed
        
        if(greybatch==null){
            guardarGramaticaG();
        }
        
        if(enGreybatch){
            if(!recIzqEliminada){
                while (n.existeRecursividadIzquierda(greybatch)) {
                n.eliminarRecursividadIzquierda(greybatch);
                actualizarCamposGreybatch();
                btnTestGreybatch.setEnabled(false);
                recIzqEliminada = true;
                }
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "LA GRAMATICA NO ESTA EN VARIABLES DE GREYBATCH");
        }
        
    }//GEN-LAST:event_btnElimnarRIActionPerformed

    private void btnElimnarRIIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimnarRIIActionPerformed
       if(greybatch==null){
            guardarGramaticaG();
        }
        
        if(enGreybatch){
            if(!recIzqEliminada){
                JOptionPane.showMessageDialog(this, "DEBE ELIMINAR LA RECRZIBIDAD IZQUIERDA PRIMERO");
            }else if(!recInmIzqEliminada){
                n.eliminarRecursividadInmediataIzquierda(greybatch);
                actualizarCamposGreybatch();
                btnTestGreybatch.setEnabled(false);
                recInmIzqEliminada = true;
            }
        }else{
            JOptionPane.showMessageDialog(this, "LA GRAMATICA NO ESTA EN VARIABLES DE GREYBATCH");
        }
    }//GEN-LAST:event_btnElimnarRIIActionPerformed

    private void txtInicialGreybatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInicialGreybatchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInicialGreybatchActionPerformed

    private void btnTestChomskyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestChomskyActionPerformed
        String inicial = "A";
        String noTerminales = "A,B,C,D,E,F,G,H";
        String terminales = "0,1,2";
        String sigma =
                        "A->B1CD/GF/BDG/1\n"+
                        "B->CDE/DCE/F1/0/λ\n"+
                        "C->DE/E/F/DE0E1/2\n"+
                        "D->B/CDE/DD1/0\n"+
                        "E->B1B2B/DE2/1\n"+
                        "F->DBEE2/F1/2\n"+
                        "H->BCD1/2";

        this.txtInicialChomsky.setText(inicial);
        this.txtNoTerminalesChomsky.setText(noTerminales);
        this.txtTerminalesChomsky.setText(terminales);
        this.txtSigmaChomsky.setText(sigma);
        this.btnTestChomsky.setEnabled(false);
        this.txtInicialChomsky.setEditable(false);
        this.txtNoTerminalesChomsky.setEditable(false);
        this.txtTerminalesChomsky.setEditable(false);
        this.txtSigmaChomsky.setEditable(false);
    }//GEN-LAST:event_btnTestChomskyActionPerformed

    private void btnEliminarNulasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarNulasActionPerformed
        if(chomsky==null){
            guardarGramaticaC();
        }
        while(n.existenNulas(chomsky)){
            n.eliminarNulas(chomsky);
        }
        actualizarCamposChomsky();
    }//GEN-LAST:event_btnEliminarNulasActionPerformed

    private void btnAplicarChomskyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAplicarChomskyActionPerformed
        if(chomsky==null){
            guardarGramaticaC();
        }
        
        if(n.existenInutiles(chomsky)){
            JOptionPane.showMessageDialog(this, "AUN EXISTEN VARIABLES INUTILES");
        }
        
        if(n.existenInalacanzables(chomsky, chomsky.getInicial())){
            JOptionPane.showMessageDialog(this, "AUN EXISTEN VARIABLES INALCANZABES");
        }
        
        if(n.existenNulas(chomsky)){
            JOptionPane.showMessageDialog(this, "AUN EXISTEN VARIABLES NULAS");
        }
        
        if(n.existenUnitarias(chomsky)){
            JOptionPane.showMessageDialog(this, "AUN EXISTEN VARIABLES UNITARIAS");
        }
        
        if(!n.existenInutiles(chomsky) && !n.existenInalacanzables(chomsky, chomsky.getInicial()) && !n.existenNulas(chomsky) && !n.existenUnitarias(chomsky)&& !n.estaEnFNC(chomsky)){
            chomsky = n.aplicarChomsky(chomsky);
            actualizarCamposChomsky();
            btnCargarGreybatch.setEnabled(true);
        }
    }//GEN-LAST:event_btnAplicarChomskyActionPerformed

    private void btnTestGreybatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestGreybatchActionPerformed
        String inicial = "A";
        String noTerminales = "A,B,C,D,E,F";
        String terminales = "0,1,2";
        String sigma =
                "A->B1/CD/1\n"+
                "B->CD/DE/F1/0\n"+
                "C->DE/0E/2\n"+
                "D->CD/DD/0\n"+
                "E->B1/B2/DE/1\n"+
                "F->DB/F1/2";

        this.txtInicialGreybatch.setText(inicial);
        this.txtNoTerminalesGreybatch.setText(noTerminales);
        this.txtTerminalesGreybatch.setText(terminales);
        this.txtSigmaGreybatch.setText(sigma);
        this.btnTestGreybatch.setEnabled(false);
        this.txtInicialGreybatch.setEditable(false);
        this.txtNoTerminalesGreybatch.setEditable(false);
        this.txtTerminalesGreybatch.setEditable(false);
        this.txtSigmaGreybatch.setEditable(false);
    }//GEN-LAST:event_btnTestGreybatchActionPerformed

    private void btnCargarGreybatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarGreybatchActionPerformed
        txtInicialGreybatch.setText(txtInicialChomsky.getText());
        txtNoTerminalesGreybatch.setText(txtNoTerminalesChomsky.getText());
        txtTerminalesGreybatch.setText(txtTerminalesChomsky.getText());
        txtSigmaGreybatch.setText(txtSigmaChomsky.getText());
        
        btnTestGreybatch.setEnabled(false);
        
        greybatch = chomsky;
        recInmIzqEliminada =  false;
        recIzqEliminada = false;
        enGreybatch = false;
        
        tabPane.setSelectedIndex(1);
    }//GEN-LAST:event_btnCargarGreybatchActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtInicialChomsky.setText("");
        txtNoTerminalesChomsky.setText("");
        txtTerminalesChomsky.setText("");
        txtSigmaChomsky.setText("");
        
        this.btnTestChomsky.setEnabled(true);
        this.txtInicialChomsky.setEditable(true);
        this.txtNoTerminalesChomsky.setEditable(true);
        this.txtTerminalesChomsky.setEditable(true);
        this.txtSigmaChomsky.setEditable(true);
        
        btnCargarGreybatch.setEnabled(false);
        chomsky = null;
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCrearVariablesGraybatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearVariablesGraybatchActionPerformed
        if(greybatch==null){
            guardarGramaticaG();
        }
        
        if(n.estaEnFNC(greybatch)){
            greybatch = n.crearVariablesGreybash(greybatch);
            actualizarCamposGreybatch();
            btnTestGreybatch.setEnabled(false);
            enGreybatch = true;
        }
    }//GEN-LAST:event_btnCrearVariablesGraybatchActionPerformed

    private void btnLimpiar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiar2ActionPerformed
        txtInicialGreybatch.setText("");
        txtNoTerminalesGreybatch.setText("");
        txtTerminalesGreybatch.setText("");
        txtSigmaGreybatch.setText("");
        
        this.btnTestGreybatch.setEnabled(true);
        
        this.txtInicialGreybatch.setEditable(true);
        this.txtNoTerminalesGreybatch.setEditable(true);
        this.txtTerminalesGreybatch.setEditable(true);
        this.txtSigmaGreybatch.setEditable(true);
        greybatch = null;
        recInmIzqEliminada =  false;
        recIzqEliminada = false;
        enGreybatch = false;
    }//GEN-LAST:event_btnLimpiar2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAplicarChomsky;
    private javax.swing.JButton btnCargarGreybatch;
    private javax.swing.JButton btnCrearVariablesGraybatch;
    private javax.swing.JButton btnEliminarInalcanzables;
    private javax.swing.JButton btnEliminarInutiles;
    private javax.swing.JButton btnEliminarNulas;
    private javax.swing.JButton btnEliminarUnitarias;
    private javax.swing.JButton btnElimnarRI;
    private javax.swing.JButton btnElimnarRII;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLimpiar2;
    private javax.swing.JButton btnTestChomsky;
    private javax.swing.JButton btnTestGreybatch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel tabComsky;
    private javax.swing.JPanel tabGreybatch;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JTextField txtInicialChomsky;
    private javax.swing.JTextField txtInicialGreybatch;
    private javax.swing.JTextArea txtNoTerminalesChomsky;
    private javax.swing.JTextArea txtNoTerminalesGreybatch;
    private javax.swing.JTextArea txtSigmaChomsky;
    private javax.swing.JTextArea txtSigmaGreybatch;
    private javax.swing.JTextField txtTerminalesChomsky;
    private javax.swing.JTextField txtTerminalesGreybatch;
    // End of variables declaration//GEN-END:variables
}
